{"version":3,"sources":["utils/_Constants.js","actions/posts.js","actions/author.js","actions/count.js","actions/additionalViews.js","components/DropdownBtn.js","utils/_DATA_API.js","components/AuthorContentCard.js","components/ShowMoreBtn.js","actions/users.js","actions/shared.js","components/App.js","reducers/index.js","reducers/users.js","reducers/count.js","reducers/author.js","reducers/posts.js","reducers/additionalViews.js","middleware/logger.js","middleware/index.js","index.js"],"names":["url","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","gridContainer","margin","width","formControl","bullet","display","transform","title","fontSize","pos","marginBottom","showMoreBtn","fontWeight","loadingContainer","loading","backgroundColor","height","position","contextTheme","React","createContext","RECIEVE_POSTS","UPDATE_POSTS","RECIEVE_AUTHOR","UPDATE_AUTHOR","updateAuthor","author","type","payload","RECIEVE_COUNT","UPDATE_COUNT","updateCount","count","RECIEVE_ADDITIONAL_VIEWS","RESET_ADDITIONAL_VIEWS","INCREMENT_ADDITIONAL_VIEWS","resetAdditionalViews","additionalViews","DropdownBtns","dispatch","useDispatch","useSelector","state","users","classes","dropdownType","useContext","handleDropdown","event","id","name","target","value","trim","foundUserIndex","posts","userId","Object","keys","filter","x","i","length","Promise","res","rej","setTimeout","fetch","then","response","json","map","getComments","totalComments","updatePosts","parseInt","Fragment","Grid","item","xs","FormControl","variant","className","InputLabel","htmlFor","Select","native","onChange","label","inputProps","aria-label","AuthorContentCard","Array","e","Card","CardContent","Typography","component","body","CardActions","Badge","badgeContent","ShowMoreBtn","Button","onClick","preventDefault","incrementAdditionalViews","disabled","RECEIVE_USERS","RECEIVE_USERS_FAIL","handleInitialData","showLoading","receiveCount","receiveAuthor","receivePosts","receiveAdditionalViews","receiveUsers","hideLoading","catch","err","App","isLoading","useEffect","container","Provider","combineReducers","action","loadingBar","loadingBarReducer","logger","store","next","console","group","log","returnValue","getState","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8be89967.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\n\r\nexport const url = \"https://jsonplaceholder.typicode.com\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  gridContainer: {\r\n    margin: 5,\r\n    // border: '1px solid red',\r\n    width: \"auto!important\",\r\n  },\r\n\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  showMoreBtn: {\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  loadingContainer: {\r\n    //   border: '1px solid red',\r\n    margin: \"10px\",\r\n  },\r\n\r\n  loading: {\r\n    backgroundColor: \"#1C6EA4\",\r\n    height: \"1px\",\r\n    position: \"relative\",\r\n  },\r\n}));\r\n\r\nexport const contextTheme = React.createContext(null);\r\n","import { showLoading, hideLoading } from \"react-redux-loading\";\n\nexport const RECIEVE_POSTS = \"RECIEVE_POSTS\";\nexport const UPDATE_POSTS = \"UPDATE_POSTS\";\n\nexport function receivePosts(posts = []) {\n  return {\n    type: RECIEVE_POSTS,\n    payload: posts,\n  };\n}\n\nexport function updatePosts(posts) {\n  return {\n    type: UPDATE_POSTS,\n    payload: posts,\n  };\n}\n","import { showLoading, hideLoading } from \"react-redux-loading\";\n\nexport const RECIEVE_AUTHOR = \"RECIEVE_AUTHOR\";\nexport const UPDATE_AUTHOR = \"UPDATE_AUTHOR\";\n\n\nexport function receiveAuthor(author='') {\n  return {\n    type: RECIEVE_AUTHOR,\n    payload: author,\n  };\n}\n\nexport function updateAuthor(author) {\n  return {\n    type: UPDATE_AUTHOR,\n    payload: author,\n  };\n}\n\n\n","import { showLoading, hideLoading } from \"react-redux-loading\";\n\nexport const RECIEVE_COUNT = \"RECIEVE_COUNT\";\nexport const UPDATE_COUNT = \"UPDATE_COUNT\";\n\nexport function receiveCount(count = \"\") {\n  return {\n    type: RECIEVE_COUNT,\n    payload: count,\n  };\n}\n\nexport function updateCount(count) {\n  return {\n    type: UPDATE_COUNT,\n    payload: count,\n  };\n}\n","import { showLoading, hideLoading } from \"react-redux-loading\";\n\nexport const RECIEVE_ADDITIONAL_VIEWS = \"RECIEVE_ADDITIONAL_VIEWS\";\nexport const RESET_ADDITIONAL_VIEWS = \"RESET_ADDITIONAL_VIEWS\";\nexport const INCREMENT_ADDITIONAL_VIEWS = \"INCREMENT_ADDITIONAL_VIEWS\";\n\nexport function receiveAdditionalViews(additionalViews = 0) {\n  return {\n    type: RECIEVE_ADDITIONAL_VIEWS,\n    payload: additionalViews,\n  };\n}\n\nexport function resetAdditionalViews(additionalViews) {\n  return {\n    type: RESET_ADDITIONAL_VIEWS,\n    payload: additionalViews,\n  };\n}\n\nexport function incrementAdditionalViews(additionalViews) {\n  return {\n    type: INCREMENT_ADDITIONAL_VIEWS,\n    payload: additionalViews,\n  };\n}\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { showLoading, hideLoading } from \"react-redux-loading\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nimport { getUserPosts, getComments } from \"../utils/_DATA_API\";\r\nimport { useStyles, contextTheme } from \"../utils/_Constants\";\r\n\r\nimport { updatePosts } from \"../actions/posts\";\r\nimport { updateAuthor } from \"../actions/author\";\r\nimport { updateCount } from \"../actions/count\";\r\nimport { resetAdditionalViews } from \"../actions/additionalViews\";\r\n\r\nexport default function DropdownBtns() {\r\n  const dispatch = useDispatch();\r\n  const { users, count, author } = useSelector((state) => ({\r\n    users: state.users,\r\n    count: state.count,\r\n    author: state.author,\r\n  }));\r\n  const classes = useStyles();\r\n  const dropdownType = React.useContext(contextTheme);\r\n\r\n  const handleDropdown = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    if (value.trim()) {\r\n      if (name === \"author\") {\r\n        let posts = \"\";\r\n        let userId = \"\";\r\n        let foundUserIndex = \"\";\r\n        foundUserIndex = Object.keys(users).filter((x, i) => {\r\n          return users[i].id == value;\r\n        });\r\n        if (foundUserIndex.length) {\r\n          userId = users[foundUserIndex[0]].id;\r\n          getUserPosts(userId)\r\n            .then((json) => {\r\n              posts = json;\r\n              return posts.map((x, i) =>\r\n                getComments(posts[i].id).then((json) => {\r\n                  posts[i].totalComments = json.length;\r\n                })\r\n              );\r\n            })\r\n            .then(() => {\r\n              // dispatch(showLoading());\r\n              setTimeout(() => {\r\n                dispatch(updatePosts(posts));\r\n                dispatch(resetAdditionalViews(0));\r\n                dispatch(updateAuthor(parseInt(value)));\r\n                // dispatch(hideLoading());\r\n              }, 200);\r\n            });\r\n        }\r\n      } else if (name === \"count\") {\r\n        // dispatch(showLoading());\r\n        dispatch(resetAdditionalViews(0));\r\n        dispatch(updateCount(parseInt(value)));\r\n        // dispatch(hideLoading());\r\n      }\r\n    } else {\r\n      name === \"author\"\r\n        ? dispatch(updateAuthor(\"\"))\r\n        : dispatch(updateCount(\"\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {dropdownType === \"author\" && (\r\n        <Grid item xs={6}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Author</InputLabel>\r\n            <Select\r\n              native\r\n              value={author}\r\n              onChange={handleDropdown}\r\n              label=\"Author\"\r\n              inputProps={{\r\n                name: \"author\",\r\n                id: \"outlined-author-native-simple\",\r\n              }}\r\n            >\r\n              <option aria-label=\"None\" value=\"\" />\r\n              {users &&\r\n                Object.keys(users).map((x, i) => (\r\n                  <option value={users[i].id} key={users[i].id}>\r\n                    {users[i].name}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      )}\r\n\r\n      {dropdownType === \"count\" && (\r\n        <Grid item xs={6}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Count</InputLabel>\r\n            <Select\r\n              native\r\n              value={count}\r\n              onChange={handleDropdown}\r\n              label=\"Count\"\r\n              inputProps={{\r\n                name: \"count\",\r\n                id: \"outlined-count-native-simple\",\r\n              }}\r\n            >\r\n              <option aria-label=\"None\" value=\"\" />\r\n              <option value={2}>2</option>\r\n              <option value={5}>5</option>\r\n              <option value={10}>10</option>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { url } from \"./_Constants\";\r\n\r\nexport function _getAllUsers() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      fetch(`${url}/users`).then((response) => res(response.json()));\r\n    }, 20);\r\n  });\r\n}\r\n\r\nexport function getComments(id) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      fetch(`${url}/comments?postId=${id}`).then((response) =>\r\n        res(response.json())\r\n      );\r\n    }, 20);\r\n  });\r\n}\r\n\r\nexport function getUserPosts(id) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      fetch(`${url}/posts?userId=${id}`).then((response) =>\r\n        res(response.json())\r\n      );\r\n    }, 20);\r\n  });\r\n}\r\n\r\n//! Future implementation for Error dispatch //\r\n// let timeout = new Promise((resolve, reject) => {\r\n//     setTimeout(reject, 300, 'request timed out');\r\n// });\r\n\r\n// let request = fetch(`${url}/users`)\r\n//     .then(response => response.json())\r\n\r\n// return Promise\r\n//     .race([timeout, request])\r\n//     .catch(err => dispatch({type: RECEIVE_USERS_FAIL, payload: err}));\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useStyles } from \"../utils/_Constants\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\n\r\nexport default function AuthorContentCard() {\r\n  const { posts, count, author, additionalViews } = useSelector((state) => ({\r\n    posts: state.posts,\r\n    count: state.count,\r\n    author: state.author,\r\n    additionalViews: state.additionalViews,\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {count > 0 &&\r\n        author &&\r\n        Object.keys(posts).length > 0 &&\r\n        [\r\n          ...Array(\r\n            count + additionalViews > Object.keys(posts).length\r\n              ? Object.keys(posts).length\r\n              : count + additionalViews\r\n          ),\r\n        ].map((e, i) => (\r\n          <Grid item xs={12} key={posts[i].id}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {posts[i].title}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                  {posts[i].body}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                {posts[i].totalComments && (\r\n                  <Badge badgeContent={posts[i].totalComments} color=\"primary\">\r\n                    <CommentIcon />\r\n                  </Badge>\r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { incrementAdditionalViews } from \"../actions/additionalViews\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { useStyles } from \"../utils/_Constants\";\r\n\r\nexport default function ShowMoreBtn() {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const { posts, count, author, additionalViews } = useSelector((state) => ({\r\n    posts: state.posts,\r\n    count: state.count,\r\n    author: state.author,\r\n    additionalViews: state.additionalViews,\r\n  }));\r\n\r\n  const showMore = (event) => {\r\n    event.preventDefault();\r\n    dispatch(incrementAdditionalViews(additionalViews + 2));\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      {count &&\r\n      author &&\r\n      count + additionalViews < Object.keys(posts).length ? (\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={showMore}\r\n          className={classes.showMoreBtn}\r\n        >\r\n          SHOW MORE\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.showMoreBtn}\r\n          disabled\r\n        >\r\n          SHOW MORE\r\n        </Button>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","import { showLoading, hideLoading } from \"react-redux-loading\";\n\nexport const RECEIVE_USERS = \"RECEIVE_USERS\";\nexport const RECEIVE_USERS_FAIL = \"RECEIVE_USERS_FAIL\";\n\nexport function receiveUsers(users) {\n  return {\n    type: RECEIVE_USERS,\n    payload: users,\n  };\n}\n","\nimport { showLoading, hideLoading } from \"react-redux-loading\";\n\nimport { _getAllUsers } from \"../utils/_DATA_API\";\n\nimport { receiveUsers } from \"../actions/users\";\nimport { receiveCount } from \"../actions/count\";\nimport { receiveAuthor } from \"../actions/author\";\nimport { receivePosts } from \"../actions/posts\";\nimport { receiveAdditionalViews } from \"../actions/additionalViews\";\nimport { RECEIVE_USERS_FAIL } from \"../actions/users\";\n\n\nexport function handleInitialData() {\n  return (dispatch) => {\n    dispatch(showLoading());\n    dispatch(receiveCount());\n    dispatch(receiveAuthor());\n    dispatch(receivePosts());\n    dispatch(receiveAdditionalViews());\n\n    return _getAllUsers()\n      .then((users) => {\n        dispatch(receiveUsers(users));\n        dispatch(hideLoading());\n      })\n      .catch((err) => dispatch({ type: RECEIVE_USERS_FAIL, payload: err }));\n  };\n}\n","import React, { useEffect } from \"react\";\nimport LoadingBar from \"react-redux-loading\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport DropdownBtns from \"./DropdownBtn\";\nimport AuthorContentCard from \"./AuthorContentCard\";\nimport ShowMoreBtn from \"./ShowMoreBtn\";\n\nimport { handleInitialData } from \"../actions/shared\";\nimport { useStyles, contextTheme} from \"../utils/_Constants\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { err = [], isLoading } = useSelector((state) => ({\n    err: state.err,\n    isLoading: state.isLoading,\n  }));\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(handleInitialData());\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      {(!isLoading && !err.length) ? (\n        <div>\n          <div className={classes.loadingContainer}>\n            <LoadingBar className={classes.loading} />\n          </div>\n          <Grid container spacing={3} className={classes.gridContainer}>\n          \n            <contextTheme.Provider value=\"author\">\n              <DropdownBtns />\n            </contextTheme.Provider>\n            \n            <contextTheme.Provider value=\"count\">\n              <DropdownBtns />  \n            </contextTheme.Provider>\n            \n            <AuthorContentCard />\n            \n            <ShowMoreBtn />\n          \n          </Grid>\n        </div>\n      ) : (\n        <div>\n          <Grid container spacing={3} className={classes.gridContainer} />\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n\n\n//* -- Future improvements --\n//? - Less dispatch calls (possibly using Refs)\n//? - Better Promise implementation\n//? - catch => error => dispatch implementation","import { combineReducers } from \"redux\";\nimport users from \"./users\";\nimport count from \"./count\";\nimport author from \"./author\";\nimport posts from \"./posts\";\nimport additionalViews from \"./additionalViews\";\n\nimport { loadingBarReducer } from \"react-redux-loading\";\n\nexport default combineReducers({\n  users,\n  count,\n  author,\n  posts,\n  additionalViews,\n  loadingBar: loadingBarReducer,\n});\n","import { RECEIVE_USERS, RECEIVE_USERS_FAIL } from \"../actions/users\";\n\nexport default function users(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_USERS: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    //MAKE ERROR REDUCER\n    case RECEIVE_USERS_FAIL:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { RECIEVE_COUNT, UPDATE_COUNT } from \"../actions/count\";\n\nexport default function count(state = {}, action) {\n  let type = action.type;\n  let payload = action.payload;\n  switch (type) {\n    case RECIEVE_COUNT: {\n      return payload;\n    }\n    //MAKE ERROR REDUCER\n    case UPDATE_COUNT:\n      return payload;\n    default:\n      return state;\n  }\n}\n","import { RECIEVE_AUTHOR, UPDATE_AUTHOR } from \"../actions/author\";\n\nexport default function author(state = {}, action) {\n  let type = action.type;\n  let payload = action.payload;\n  switch (type) {\n    case RECIEVE_AUTHOR: {\n      return payload;\n    }\n    //MAKE ERROR REDUCER\n    case UPDATE_AUTHOR:\n      return payload;\n    default:\n      return state;\n  }\n}\n","import { RECIEVE_POSTS, UPDATE_POSTS } from \"../actions/posts\";\n\nexport default function posts(state = {}, action) {\n  let type = action.type;\n  let payload = action.payload;\n  switch (type) {\n    case RECIEVE_POSTS: {\n      return {\n        ...state,\n        ...payload,\n      };\n    }\n    //MAKE ERROR REDUCER\n    case UPDATE_POSTS:\n      return {\n        ...state,\n        ...payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  RECIEVE_ADDITIONAL_VIEWS,\n  RESET_ADDITIONAL_VIEWS,\n  INCREMENT_ADDITIONAL_VIEWS,\n} from \"../actions/additionalViews\";\n\nexport default function additionalViews(state = {}, action) {\n  let type = action.type;\n  let payload = action.payload;\n  switch (type) {\n    case RECIEVE_ADDITIONAL_VIEWS:\n      return payload;\n\n    case RESET_ADDITIONAL_VIEWS:\n      return payload;\n\n    case INCREMENT_ADDITIONAL_VIEWS:\n      return payload;\n\n    //MAKE ERROR REDUCER\n\n    default:\n      return state;\n  }\n}\n","const logger = (store) => (next) => (action) => {\n  console.group(action.type);\n  console.log(\"The action: \", action);\n  const returnValue = next(action);\n  console.log(\"The new state: \", store.getState());\n  console.groupEnd();\n  return returnValue;\n};\n\nexport default logger;\n","import thunk from \"redux-thunk\";\nimport logger from \"./logger\";\nimport { applyMiddleware } from \"redux\";\n\nexport default applyMiddleware(thunk, logger);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport middleware from \"./middleware\";\n\n\nconst store = createStore(reducer, middleware);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}